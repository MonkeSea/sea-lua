-- This file was generated using Luraph Obfuscator v13.5.8

return(function(I9,Z9,P9,J9,L9,C9,p9,n9,h9,B9,K9,j9,v9,k9,V9,b9,w9,c9,mo,O9,i9,T9,A9,a9,d9,H9,Q9,y9,x9,D9,e9,fo,N9,u9,F9,G9,Y9,l9,r9,X9,t9,g9,z9,f,...)local s,S=nil,nil;for Ec=0x0000,1 do if Ec==0 then s=u9;else S=c9;end;end;local q,E=nil,(nil);local U=(tostring);local M=pcall;local so=(0x0);repeat if so~=0 then do E=e9;end;so=0X00002;else q=A9;so=1;end;until so>=2;local I,c={[0]=1},(T9);local Y=setfenv;local e=b9;so=0;local u,b,J,p,W,d,o=nil,nil,nil,nil,nil,nil,nil;repeat if not(so<=0X0002)then if so<=0X4 then if so~=0x3 then b=p9;so=0X2;else o=h9.byte;so=7;end;else if so~=0X5 then p=v9;do so=5;end;else W=r9;so=0x1;end;end;else if not(so<=0x0)then if so==0X1 then d=d9 or Y9.unpack;so=0X0003;else do J=n9;end;so=6;end;else u=D9;so=4;end;end;until so>6;so=0X7;local g,h,L,a,C,P=nil,nil,nil,nil,nil,(nil);while so~=8 do if so<=3 then if so<=1 then if so~=0 then h=H9;so=0x00003;else P=C9;do so=0x8;end;end;else if so==0x0002 then so=0X5;else L=(h and h()or _ENV);so=2;end;end;elseif so<=5 then do if so~=4 then aso=6;else do so=0X001;end;end;end;else if so==0X006 then so=0;else do g={[0]={[0]=0X0,0X1,L9,3,4,P9,a9,0X7,8,0X00009,10,0X0000B,12,0X0000D,0X000e,0Xf},{[0x0]=C9,0X0,3,0X2,0X5,0X4,0X00007,6,k9,i9,11,0xa,0XD,0X00C,15,0Xe},{[0]=0X2,j9,0X0,0X1,0x6,7,0X4,0X5,0xa,0Xb,8,9,0Xe,15,0XC,13},{[0x0]=0X3,0x2,0X1,0X00000,7,0X6,5,4,0Xb,0Xa,k9,0X8,0xf,0X00E,J9,0Xc},{[0]=O9,0X5,6,7,0,0X1,2,0X3,12,0X0d,X9,15,8,0x00009,10,t9},{[0]=5,0X4,0X7,0X6,0X01,0X00000,0x0003,2,0X00D,12,15,0xe,0X009,0X008,11,0Xa},{[I9]=0X6,7,O9,5,0X2,0X3,0x0,1,0xE,15,0Xc,13,10,11,0X8,0X9},{[0]=7,6,0X5,4,j9,2,C9,0,15,14,0Xd,12,11,10,0X9,8},{[I9]=0X08,k9,10,11,0Xc,13,0x0E,15,0,0x0001,0X0002,j9,4,0x5,0X6,7},{[0]=0X9,8,11,10,0X00D,0xc,15,0X0000E,1,0x0,3,0X00002,5,4,7,6},{[0]=10,0XB,i9,0X0009,0xE,0Xf,12,13,2,0X3,0X0,1,6,0X007,0X004,0X05},{[0]=11,0XA,0X9,8,15,0Xe,13,12,0X3,2,0X1,0X0,7,0X6,5,O9},{[0X0]=12,13,0X000E,0Xf,0X008,0X09,10,0Xb,4,5,0X6,7,0,1,2,j9},{[0X0]=13,0Xc,Q9,14,9,0X8,0X00b,10,5,4,0X0007,0x6,0X1,0,3,2},{[0]=0x000E,0X0f,0xc,13,0XA,0Xb,i9,9,0x6,0x07,4,0X05,L9,0X003,0X0,0X1},{[0]=15,14,13,12,0XB,w9,9,0X8,0X0007,0X6,0X5,4,3,0X02,1,0X00}};end;do so=4;end;end;end;end;so=0X2;local k,v,j,O,t,i=nil,nil,nil,nil,nil,(nil);do while so<=6 do if not(so<=2)then if not(so<=4)then if so==5 then O=2^0X000034;so=0X3;else j=2147483648;so=5;end;else if so~=3 then do i=function()local QS=(0x00);local MS,SS,tS,xS=nil,nil,nil,(nil);repeat if QS<=0 then MS,SS,tS,xS=o(a,P,P+3);do QS=0X2;end;else do if QS==1 then return xS*16777216+tS*0x0010000+SS*256+MS;else P=P+4;QS=1;end;end;end;until false;end;end;so=0X7;else t=j-0X1;do so=0X4;end;end;end;else if not(so<=0X00000)then if so~=0X1 then do a=c(q(a,5),'..',function(p6)if o(p6,2)==72 then C=W(q(p6,0x1,1));return g9;else local Iv=nil;for MT=0x0,0X00001 do if MT==0 then Iv=E(W(p6,16));else if C then local wU,MU=0X0,nil;repeat if wU<=0X000 then do MU=u(Iv,C);end;wU=2;else if wU~=1 then C=G9;wU=0X1;else return MU;end;end;until(false);else return Iv;end;end;end;end;end);end;so=1;else k=function()local EV=o(a,P,P);do P=P+0x1;end;do return EV;end;end;so=0X0;end;else v=coroutine.wrap;so=0X06;end;end;end;end;local X,D,w=J-C9,nil,nil;for yl=0X0000,2 do if not(yl<=0)then do if yl==0X1 then D=N9;else w=function()local yQ,GQ=i(),(i());local zQ=0X1;while 0.41233819489405543 do if zQ==0x0 then return GQ*J+yQ;else do if GQ>=j then do GQ=GQ-J;end;end;end;zQ=0;end;end;end;end;end;else do local WO=(0X02);do for XQ=0X1,31 do I[XQ]=WO;WO=WO*2;end;end;end;end;end;local T=(setmetatable);local Q,R,H,A,G=nil,nil,nil,nil,nil;do for ZY=0,4 do do if not(ZY<=0X1)then if not(ZY<=2)then do if ZY~=0X3 then G=(K9 or bit32);else A=Z9;end;end;else H=function()local c0,W0,w0=0,nil,(nil);do while c0<0X002 do if c0==0 then W0=i();c0=1;else w0=0X001;c0=0X2;end;end;end;c0=1;local r0=nil;do while c0~=0X2 do if c0==0 then if not(W0==0X00 and r0==I9)then else return 0;end;do c0=0X2;end;else do r0=i();end;do c0=0;end;end;end;end;local M0=((-0x1)^Q(r0,31,0X1));local a0=Q(r0,0x14,11);local K0=Q(r0,I9,l9)*J+W0;do c0=0X0;end;do while(true)do if c0==0 then do if a0==I9 then if K0==0X0 then do return M0*I9;end;else a0=1;w0=0X0000;end;elseif a0==2047 then if K0~=I9 then return M0*(1/0);else return M0*(0/0X0);end;end;end;do c0=1;end;else return M0*(0x2^(a0-0X0003Ff))*(K0/O+w0);end;end;end;end;end;else if ZY~=0X0 then R=V9;else Q=function(eL,AL,hL)local jL,fL=(eL/I[AL])%I[hL],(0);while(true)do do if fL==0x00000 then do jL=jL-jL%1;end;fL=1;else do return jL;end;end;end;end;end;end;end;end;end;end;local N=G and G.bxor or function(zA,AA)zA=zA%J;local XA,QA=0X1,(nil);repeat if XA~=0 then do QA=0X1;end;do XA=0X00000;end;else do AA=AA%J;end;XA=2;end;until XA==0x2;local FA=(0);while zA>I9 and AA>0X0 do local oF,zF,eF=0x1,nil,nil;repeat do if not(oF<=0X02)then if oF<=0X3 then QA=QA*16;do break;end;else if oF==0X4 then do AA=(AA-eF)/16;end;oF=0X0003;else eF=AA%0x10;oF=0X0;end;end;else if oF<=0 then FA=FA+g[zF][eF]*QA;do oF=2;end;elseif oF~=0X1 then do zA=(zA-zF)/16;end;do oF=4;end;else zF=zA%16;oF=0X5;end;end;end;until false;end;do return FA+zA*QA+AA*QA;end;end;local V=G and G.band or function(Iw,jw)local Vw=0X2;while 0.39785659867922096 do if not(Vw<=0)then if Vw==0X1 then do jw=jw%J;end;Vw=0X0;else Iw=Iw%J;Vw=1;end;else return((Iw+jw)-N(Iw,jw))/0X2;end;end;end;local l=G and G[z9]or function(qh,zh)do qh=qh%J;end;do zh=zh%J;end;return X-V(X-qh,X-zh);end;local S9,z={},(G and G.rshift);local Z,R9,K=G and G.bnot or function(bG)return X-(bG%J);end,{},(G and G[F9]);K=K or function(op,Fp)local kp=0;while 1371437445 do if kp<=0 then if not(Fp>=0x20)then else return 0x0;end;kp=0X0001;else do if kp~=0X1 then do return(op*I[Fp])%J;end;else if not(Fp<0)then else do return z(op,-Fp);end;end;do kp=2;end;end;end;end;end;end;do z=z or function(nk,Rk)if Rk>=0X20 then return 0;end;local Nk=0X0;local Kk=(nil);repeat if not(Nk<=0X000)then if Nk~=0x1 then return Kk-Kk%0X01;else Kk=(nk%J/I[Rk]);Nk=2;end;else if Rk<0 then return K(nk,-Rk);end;do Nk=0X0001;end;end;until false;end;end;so=0;local y,B=nil,(nil);while so<2 do if so~=0X0 then B={[0X7]=5,[0x02]=0x7,[5]=0X6,[1]=0X00004,[3]=0X000,[0X4]=0X1,[8]=0X004,[0X9]=0X08,[0X6]=6,[0X00001]=0X3};do so=2;end;else y=function()local gz=(0X0);local Uz=0X000;do while 0.29145131254985335 do local Wm=(o(a,P,P));P=P+1;do gz=l(gz,K(V(Wm,127),Uz));end;if V(Wm,0X80)~=0X00000 then else return gz;end;do Uz=Uz+0X7;end;end;end;end;do so=0X00001;end;end;end;local F=({2,4,0x00005});local f9=(k());local m9=(k());local s9=function(XP)local EP,UP,CP,sP,gP=nil,nil,nil,nil,(nil);local VP=(0);while VP~=5 do if VP<=0X1 then if VP~=0 then do gP=N(EP[0X4],m9);end;VP=0x005;else EP={o(a,P,P+3)};VP=2;end;else if VP<=0x2 then UP=N(EP[0X001],m9);do VP=4;end;else if VP==3 then sP=N(EP[0X3],m9);VP=0X1;else CP=N(EP[0X2],m9);VP=3;end;end;end;end;for WM=0,0X2 do if not(WM<=0)then if WM~=1 then return gP*16777216+sP*65536+CP*0X100+UP;else P=P+4;end;else m9=(161*m9+XP)%0X100;end;end;end;local m=assert;so=0;local M9,r,U9,W9,x,q9,o9=nil,nil,nil,nil,nil,nil,(nil);do repeat do if not(so<=3)then if not(so<=0x5)then if so==0X00006 then do W9=function(TF)local WF=(i());local DF,aF=g9,(2);do while(true)do if aF<=0 then return DF;else if aF~=1 then for L1=0X01,WF,7997 do local M1=L1+7997-C9;if not(M1>WF)then else M1=WF;end;local b1,f1=0,nil;do while b1<0X2 do if b1==0X0000 then f1={o(a,P+L1-1,P+M1-0X00001)};b1=1;else for NR=1,#f1 do(f1)[NR]=N(f1[NR],f9);do f9=(TF*f9+B9)%y9;end;end;b1=0X2;end;end;end;DF=DF..E(d(f1));end;do aF=0X1;end;else do P=P+WF;end;aF=0X0;end;end;end;end;end;end;so=2;else U9=1;so=6;end;else if so==4 then so=5;else function q9(yP,IP,kP)local vP,RP,PP=kP[0X004],kP[0x0008],(kP[1]);local TP=(kP[0x5]);local OP,hP,jP=kP[7],kP[2],kP[0X00006];local ZP=(T({},{__mode="v"}));local LP,UP=kP[3],(nil);UP=function(...)local XS=({});local aS=0X1;local mS=((h and h()or _ENV));local SS,zS=M9(...);local FS={[0X0001]=XS,[2]=kP};do SS=SS-1;end;local vS=(mS==L and yP or mS);do for QD=0X0,SS do if RP>QD then do XS[QD]=zS[QD+1];end;else break;end;end;end;if not hP then zS=nil;elseif not(jP)then else XS[RP]={n=SS>=RP and SS-RP+1 or 0,d(zS,RP+1,SS+0x1)};end;local MS=0;if vS==mS then else if not(Y)then _ENV=vS;else Y(UP,vS);end;end;local jS,lS,NS,pS=M(function()while true do local vs=TP[aS];local Os=vs[3];aS=aS+1;do if Os<0X2E then if Os>=23 then if Os>=0X00022 then if Os>=0X28 then if Os>=0X02B then if Os<44 then do repeat local Fl,kl=ZP,XS;do if#Fl>0X0 then local ke={};for nP,wP in p,Fl do for nA,wA in p,wP do if not(wA[0x1]==kl and wA[0X2]>=0)then else local hr=wA[2];if not(not ke[hr])then else ke[hr]={kl[hr]};end;wA[0X0001]=ke[hr];wA[0X2]=0X01;end;end;end;end;end;until true;end;return true,vs[2],0;else if Os~=0X2d then local Q1=(vs[2]);XS[Q1]=XS[Q1](d(XS,Q1+0X1,MS));do MS=Q1;end;else XS[vs[0X0002]]=-XS[vs[5]];end;end;else if not(Os<41)then if Os~=0x002a then do XS[vs[0X2]]=Z(XS[vs[5]]);end;else XS[vs[0X002]]=XS[vs[0X0005]]*XS[vs[4]];end;else(FS)[vs[5]]=XS[vs[2]];end;end;else if Os>=37 then do if not(Os<38)then if Os==39 then XS[vs[0X2]]=XS[vs[5]];else local SF=vs[0X00002];local sF=(vs[4]-1)*0x032;local eF=(XS[SF]);for Qp=0X1,vs[5]do eF[sF+Qp]=XS[SF+Qp];end;end;else if not(XS[vs[0X0005]]<XS[vs[0X4]])then else do aS=vs[2];end;end;end;end;else if Os<35 then(XS)[vs[2]]=z(XS[vs[5]],XS[vs[4]]);else if Os~=0X00024 then if XS[vs[0X5]]~=XS[vs[0X4]]then else do aS=vs[0X2];end;end;else if not(not(XS[vs[0X005]]<=vs[0X1]))then else aS=vs[2];end;end;end;end;end;else do if not(Os<0X1C)then do if Os>=0X1F then if not(Os<0x20)then do if Os==33 then local IM=vs[0x2];local sM,DM=XS[IM]();if sM then do XS[IM+1]=DM;end;aS=vs[5];end;else local xM=(vs[2]);for bn=xM,xM+(vs[5]-1)do XS[bn]=zS[RP+(bn-xM)+1];end;end;end;else do repeat local S3,X3=ZP,XS;if#S3>0 then local sN=({});for CR,cR in p,S3 do for tS,cS in p,cR do if not(cS[1]==X3 and cS[2]>=0)then else local SP=cS[2];if not sN[SP]then(sN)[SP]={X3[SP]};end;(cS)[0X1]=sN[SP];(cS)[0X002]=1;end;end;end;end;until true;end;return;end;else if not(Os<0X1d)then if Os==0X1e then XS[vs[0x002]]=S9[vs[5]];else if XS[vs[5]]~=XS[vs[0X004]]then aS=vs[0X02];end;end;else if XS[vs[5]]<=XS[vs[0X4]]then aS=vs[0X2];end;end;end;end;else do if not(Os<0X19)then do if Os>=26 then if Os~=27 then do(XS)[vs[2]]=vS[vs[6]];end;else local o0=vs[0X002];XS[o0](d(XS,o0+0X001,MS));MS=o0-1;end;else(XS)[vs[0X2]]=XS[vs[5]]~=vs[0X1];end;end;else if Os~=24 then local c2=vs[2];local w2,l2=XS[c2]();do if not(w2)then else aS=vs[0x0005];XS[c2+3]=l2;end;end;else if vs[4]==127 then aS=aS-1;do TP[aS]={[0x00005]=(vs[5]-114),[2]=(vs[0x02]-0x072),[0x0003]=0X000027};end;else do repeat local B4,U4=ZP,(XS);if#B4>0x0 then local hn=({});do for DQ,qQ in p,B4 do for du,qu in p,qQ do if qu[0x00001]==U4 and qu[2]>=0X0 then local f7=(qu[0X2]);do if not hn[f7]then(hn)[f7]={U4[f7]};end;end;(qu)[1]=hn[f7];qu[2]=0X1;end;end;end;end;end;until true;end;local HS=(vs[2]);return false,HS,HS+vs[5]-0X2;end;end;end;end;end;end;end;else if not(Os>=0x000b)then if Os<5 then if Os<0X2 then if Os==1 then XS[vs[2]]=vs[0X00006];else(XS)[vs[2]]={d({},1,vs[5])};end;else do if Os<0X03 then do for a6=vs[0x2],vs[5]do(XS)[a6]=nil;end;end;else if Os==0X4 then local qS,DS=vs[2],(vs[0X0004]-0X1)*0X0032;local oS=XS[qS];for kO=0X1,MS-qS do(oS)[DS+kO]=XS[qS+kO];end;else do XS[vs[0X00002]]=XS[vs[5]]%vs[1];end;end;end;end;end;else if not(Os>=0X8)then if not(Os<6)then if Os==0X7 then local qh=IP[vs[0X5]];XS[vs[2]]=qh[0X1][qh[2]];else XS[vs[2]]={};end;else local Us=vs[2];local js=v(function(...)r();do for NX,bX in...do(r)(true,NX,bX);end;end;end);(js)(XS[Us],XS[Us+0x001],XS[Us+2]);MS=Us;XS[Us]=js;aS=vs[5];end;else if Os<9 then(vS)[vs[0x6]]=XS[vs[0x002]];else if Os~=10 then local MV=(vs[2]);local gV=(v(function(...)r();for em in...do r(true,em);end;end));(gV)(XS[MV],XS[MV+0X0001],XS[MV+0X2]);do MS=MV;end;do XS[MV]=gV;end;aS=vs[5];else(XS)[vs[0X02]]=true;end;end;end;end;else if not(Os>=17)then if not(Os>=14)then do if Os>=0x0000c then do if Os==0xd then local GT=(IP[vs[5]]);(GT[0X1])[GT[2]]=XS[vs[2]];else do repeat local KF,hF,NF=ZP,XS,vs[2];if#KF>0X0 then local CN={};for I0,M0 in p,KF do for H1,g1 in p,M0 do if not(g1[0x001]==hF and g1[2]>=NF)then else local sF=(g1[0X2]);if not CN[sF]then do(CN)[sF]={hF[sF]};end;end;g1[0X1]=CN[sF];(g1)[2]=1;end;end;end;end;until true;end;end;end;else S9[vs[0X0005]]=XS[vs[0X00002]];end;end;else if Os<15 then local CF=(vs[2]);local MF,sF=XS[CF]();if not(MF)then else for V2=1,vs[4]do XS[CF+V2]=sF[V2];end;aS=vs[0x5];end;else if Os==0x0010 then do if not XS[vs[2]]then do aS=vs[5];end;end;end;else local Yi=(vP[vs[5]]);local wi,gi=Yi[9],nil;local bi=(#wi);if not(bi>0)then else gi={};for zU=1,bi do local QU=wi[zU];if QU[1]==0X0 then(gi)[zU-1]={XS,QU[2]};else do(gi)[zU-0X1]=IP[QU[2]];end;end;end;e(ZP,gi);end;XS[vs[2]]=q9(vS,gi,Yi);end;end;end;else if Os<20 then if Os<0X12 then XS[vs[2]]=XS[vs[5]]^XS[vs[0X4]];else if Os~=19 then(XS[vs[0X2]])[XS[vs[5]]]=vs[0X001];else if not(XS[vs[0X2]])then else aS=vs[0X5];end;end;end;else if Os>=0x00015 then do if Os==0X016 then local Uw=vs[0X2];(XS)[Uw]=XS[Uw](XS[Uw+0X1]);do MS=Uw;end;else if XS[vs[0X5]]==vs[0X001]then aS=vs[0X00002];end;end;end;else XS[vs[0X2]]=XS[vs[0X5]]+XS[vs[0x4]];end;end;end;end;end;else if Os>=69 then if Os<81 then if not(Os>=0X04B)then if Os<0X48 then if Os<70 then do(XS)[vs[0X2]]=XS[vs[0X005]]~=XS[vs[4]];end;else do if Os~=0x0047 then do(XS[vs[0X2]])[vs[0x00006]]=vs[0X1];end;else local jo=(vs[2]);XS[jo](XS[jo+0X1]);MS=jo-1;end;end;end;else do if not(Os<73)then if Os==74 then local BV=vs[0x00005];local aV=XS[BV];for h8=BV+0X1,vs[0X0004]do aV=aV..XS[h8];end;(XS)[vs[2]]=aV;else local gj=(vs[5]);local ej=vs[2];if gj==0x00 then else MS=ej+gj-0X0001;end;local Fj=vs[4];local Mj,hj=nil,(nil);if gj==1 then Mj,hj=M9(XS[ej]());else Mj,hj=M9(XS[ej](d(XS,ej+0X1,MS)));end;if Fj~=1 then if Fj==0 then Mj=Mj+ej-1;MS=Mj;else Mj=ej+Fj-0X2;MS=Mj+0X0001;end;local rE=(0X0);for Oy=ej,Mj do rE=rE+0X001;XS[Oy]=hj[rE];end;else do MS=ej-1;end;end;end;else do(XS[vs[0X2]])[XS[vs[5]]]=XS[vs[0x04]];end;end;end;end;else if not(Os>=78)then if Os<0X4C then local Jm=vs[0X2];XS[Jm](XS[Jm+1],XS[Jm+0x02]);do MS=Jm-1;end;else if Os==77 then if XS[vs[5]]==vs[0x1]then else aS=vs[0X00002];end;else(XS)[vs[0X2]]=not XS[vs[0x0005]];end;end;else do if Os<0x4f then do(XS)[vs[2]]=K(XS[vs[5]],XS[vs[0X4]]);end;else do if Os==0X50 then local hC,QC=vs[0X00002],XS[vs[0X005]];(XS)[hC+1]=QC;(XS)[hC]=QC[vs[0X1]];else local fk=vs[0X005];XS[vs[2]]=XS[fk]..XS[fk+1];end;end;end;end;end;end;else if not(Os<0X0057)then if not(Os<90)then if Os<0X5b then aS=vs[0x005];else if Os==0X0005c then if not(XS[vs[5]]<=XS[vs[4]])then do aS=vs[0X2];end;end;else local iP,uP=vs[0X2],(vs[0X5]);MS=iP+uP-1;repeat local CC,RC=ZP,XS;do if#CC>0x00 then local CO={};for T1,r1 in p,CC do do for ub,hb in p,r1 do do if hb[0X01]==RC and hb[2]>=0X0 then local Hq=hb[2];if not CO[Hq]then CO[Hq]={RC[Hq]};end;(hb)[0x1]=CO[Hq];do(hb)[2]=1;end;end;end;end;end;end;end;end;until true;return true,iP,uP;end;end;else do if not(Os>=88)then(XS)[vs[0X002]]=XS[vs[0X5]]/XS[vs[0X04]];else do if Os==0x059 then(XS)[vs[0X2]]=false;else do XS[vs[0X02]]=XS[vs[0x5]]%XS[vs[0X004]];end;end;end;end;end;end;else if not(Os>=84)then if not(Os<82)then if Os==0X53 then if not(XS[vs[0x5]]<XS[vs[4]])then do aS=vs[0x002];end;end;else(XS)[vs[2]]=XS[vs[0X5]]<XS[vs[4]];end;else(XS)[vs[2]]=XS[vs[5]]-XS[vs[4]];end;else do if Os<85 then local OF=(XS[vs[5]]/XS[vs[0X00004]]);(XS)[vs[2]]=OF-OF%0x0001;else do if Os~=86 then MS=vs[0X0002];(XS[MS])();MS=MS-0X1;else local t7,u7=vs[2],(SS-RP);if not(u7<0X00)then else do u7=-0x1;end;end;for JR=t7,t7+u7 do do(XS)[JR]=zS[RP+(JR-t7)+1];end;end;MS=t7+u7;end;end;end;end;end;end;end;else if Os<57 then if not(Os>=0x33)then if not(Os<0X30)then if Os<49 then do(XS)[vs[2]]=XS[vs[5]]>XS[vs[4]];end;else if Os==0X32 then XS[vs[0X0002]]=#XS[vs[5]];else(XS)[vs[2]]=N(XS[vs[5]],XS[vs[4]]);end;end;else if Os==0X2f then local X3=vs[2];local w3,K3,M3=XS[X3]();if not(w3)then else XS[X3+1]=K3;(XS)[X3+0X2]=M3;do aS=vs[5];end;end;else XS[vs[0X00002]]=XS[vs[0X005]]==XS[vs[0X00004]];end;end;else do if Os>=0X36 then if not(Os<55)then if Os~=56 then XS[vs[0X02]]=nil;else local BM=(vs[0x0002]);local rM=v(function(...)r();for Ou,Yu,zu,Au,Tu,su,Ru,Iu,fu,xu in...do(r)(true,{Ou,Yu,zu,Au,Tu,su,Ru,Iu,fu,xu});end;end);(rM)(XS[BM],XS[BM+0X0001],XS[BM+2]);MS=BM;XS[BM]=rM;aS=vs[0X0005];end;else repeat local hW,MW=ZP,(XS);if#hW>0 then local du=({});for Kc,sc in p,hW do for si,oi in p,sc do if oi[1]==MW and oi[0X2]>=0X0000 then local KH=oi[0X00002];do if not du[KH]then du[KH]={MW[KH]};end;end;do(oi)[0X01]=du[KH];end;oi[2]=1;end;end;end;end;until true;local ea=(vs[2]);return false,ea,ea;end;else if not(Os>=0X34)then do XS[vs[0X02]]=vs[0X006];end;else if Os==0X00035 then local Ij=vs[2];do MS=Ij+vs[0X5]-0X00001;end;(XS[Ij])(d(XS,Ij+1,MS));do MS=Ij-1;end;else do XS[vs[0X2]]=XS[vs[5]][vs[0X1]];end;end;end;end;end;end;else do if not(Os<63)then if Os>=66 then do if not(Os<67)then if Os==0X044 then(XS[vs[0X02]])[vs[6]]=XS[vs[4]];else XS[vs[0X02]]=XS[vs[0x5]]+vs[0X1];end;else do XS[vs[0X0002]]=XS[vs[0X5]]>=XS[vs[4]];end;end;end;else if not(Os<64)then if Os~=65 then if vs[0x4]==64 then do aS=aS-1;end;(TP)[aS]={[0X00002]=(vs[2]-82),[0X3]=0x001F,[5]=(vs[5]-0X52)};elseif vs[4]==0Xdc then aS=aS-0X1;(TP)[aS]={[0X3]=0X27,[2]=(vs[0X2]-162),[5]=(vs[5]-162)};else repeat local OS,CS=ZP,(XS);if#OS>0x0 then local qZ=({});do for ZZ,kZ in p,OS do for tp,Vp in p,kZ do if not(Vp[0x001]==CS and Vp[2]>=0)then else local F8=Vp[2];if not(not qZ[F8])then else qZ[F8]={CS[F8]};end;(Vp)[1]=qZ[F8];Vp[0x2]=1;end;end;end;end;end;until true;return false,vs[0X2],MS;end;else XS[vs[0X0002]]=XS[vs[0X005]]*vs[0x001];end;else(XS)[vs[0X2]]=V(XS[vs[5]],XS[vs[4]]);end;end;else if not(Os>=60)then if Os>=0X00003a then if Os==59 then(XS)[vs[2]]=FS[vs[0X5]];else(XS)[vs[2]]=XS[vs[5]][XS[vs[0X00004]]];end;else repeat local Tn,Hn=ZP,XS;if not(#Tn>0X0)then else local GA={};for md,Nd in p,Tn do for Dg,cg in p,Nd do if cg[0X1]==Hn and cg[2]>=0x0 then local Ey=cg[2];if not GA[Ey]then(GA)[Ey]={Hn[Ey]};end;cg[1]=GA[Ey];(cg)[2]=1;end;end;end;end;until true;return true,vs[0x2],1;end;else if not(Os>=61)then local bg=vs[0x2];XS[bg]=XS[bg](XS[bg+0X00001],XS[bg+2]);MS=bg;else if Os==0X0003E then local Cd=vs[0X00002];local Qd,Id,Xd=XS[Cd],XS[Cd+0x001],XS[Cd+0X2];(XS)[Cd]=v(function()for Fv=Qd,Id,Xd do(r)(true,Fv);end;end);aS=vs[5];else(XS)[vs[0X02]]=XS[vs[5]]<=XS[vs[0X004]];end;end;end;end;end;end;end;end;end;end;end);do if not(jS)then if R(lS)=="\115t\114ing"then if not(A(lS,"\097tt\101m\112\116 \116\111\032\121ield\032acro\115s me\116a\109eth\111d/\067%\045\099\097ll \098\111un\100a\114\121"))then else return coroutine.yield();end;if not(A(lS,"^.-:\037d+\058 "))then(S)(lS,0X0);else S("Luraph Script:"..(OP[aS-0x001]or"(internal)")..':\032'..U(lS),0);end;else S(lS,0);end;else if lS then do if pS==0X001 then return XS[NS]();else return XS[NS](d(XS,NS+1,MS));end;end;elseif not(NS)then else do return d(XS,NS,pS);end;end;end;end;end;if Y then Y(UP,yP);end;do return UP;end;end;so=0X1;end;end;elseif so<=1 then if so~=0X00000 then function o9()local yE={};local zE,qE,JE,mE=0x0,nil,nil,(nil);while zE<=5 do if zE<=0X0002 then if not(zE<=0)then if zE==1 then for Ra=0x1,mE do local oa=(i());local ha=i();local Ea,Ca=1,nil;while Ea~=2 do if Ea==0X0 then do for J1=oa,ha do do qE[7][J1]=Ca;end;end;end;Ea=0x2;else Ca=i();Ea=0;end;end;end;zE=0x2;else do qE[15]=i();end;zE=0x03;end;else qE={G9,nil,nil,{},{},nil,{},G9,G9};do zE=4;end;end;else do if zE<=0X3 then qE[0X00f]=k();zE=0X6;else do if zE==4 then JE=C9;do zE=0X005;end;else mE=i();do zE=1;end;end;end;end;end;end;end;(qE)[j9]=y();zE=0x0;do while(true)do if zE<=1 then if zE~=0X00 then do(qE)[0X000013]=i();end;zE=0X004;else qE[0x0008]=y();do zE=0X02;end;end;else if zE<=2 then do(qE)[0XC]=i();end;zE=1;else do if zE~=3 then do qE[0X12]=i();end;zE=3;else(qE)[0XA]=k();break;end;end;end;end;end;end;do zE=0x0;end;local sE=nil;while zE<2 do if zE~=0 then qE[2]=Q(sE,1,0X0001)~=0X00;zE=2;else sE=k();zE=1;end;end;qE[0X00006]=Q(sE,0X02,1)~=0x0;local VE=i()-67135;local eE,iE=qE[0X004],nil;for ME=0,0X1 do do if ME==0X0 then iE={};else for GH=0x0,VE-1 do do(eE)[GH]=o9();end;end;end;end;end;local DE=i()-0X000232e;local kE=(qE[0x5]);local TE={};zE=0X1;repeat if zE~=0 then for ao=1,DE do kE[ao]={[x9]=k(),[0X3]=y(),[0X6]=k(),[0x00005]=x(),[4]=x(),[0x1]=k(),[2]=x()};end;zE=0;else(qE)[1]=y();zE=2;end;until zE>=2;zE=0X3;local gE,xE,SE=nil,nil,(nil);do while zE<0X9 do if not(zE<=3)then if not(zE<=5)then if not(zE<=6)then if zE~=0X7 then do qE[14]=i();end;zE=0;else qE[9]=TE;do zE=9;end;end;else do xE=k();end;do zE=0X00002;end;end;else if zE==0X0004 then for qC=1,DE do local EC=(0);local XC=nil;while EC<2 do if EC~=0X000 then do for EE,KE in ipairs(F)do local NE=B[KE];local CE=XC[NE];if CE==0x07 then local NB=yE[XC[KE]];local eB=(iE[NB]);if not(eB)then else(XC)[NE]=eB[C9];local sX=(eB[2]);sX[#sX+1]={XC,NE};end;elseif CE==10 then XC[KE]=qC+XC[KE]+0X1;end;end;end;EC=2;else do XC=qE[0x5][qC];end;EC=0x1;end;end;end;zE=8;else for JQ=0X1,gE do local OQ,fQ=nil,nil;local ZQ=1;while ZQ<0x3 do do if ZQ<=0x0 then(yE)[JQ-1]=JE;ZQ=3;else if ZQ==0x1 then OQ=k();ZQ=2;else fQ=nil;ZQ=0X0;end;end;end;end;if OQ==34 then fQ=q(W9(xE),i());elseif OQ==231 then do fQ=q(W9(xE),5);end;elseif OQ==26 then do fQ=w();end;elseif OQ==0X00058 then fQ=H();elseif OQ==134 then do fQ=fo;end;elseif OQ==168 then fQ=H();elseif OQ==0x0009e then fQ=w();elseif OQ==45 then fQ=mo;elseif OQ~=0X07e then else fQ=H();end;local gQ={fQ,{}};(iE)[JE]=gQ;JE=JE+1;if not(SE)then else for IE=0,0x1 do if IE~=0 then U9=U9+1;else do R9[U9]=gQ;end;end;end;end;end;zE=0X4;end;end;else if not(zE<=1)then if zE==2 then SE=k()~=0;zE=5;else qE[0X000011]=i();zE=0X001;end;else if zE==0X0 then(qE)[16]=i();zE=0X7;else gE=i()-74382;zE=0x6;end;end;end;end;end;do zE=1;end;while(true)do if zE~=0 then do for hX=0X1,y()do TE[hX]={k(),y()};end;end;zE=0;else return qE;end;end;end;so=8;else do M9=function(...)do return s('#',...),{...};end;end;end;do so=0X00003;end;end;else if so==2 then do x=function()local Ko=(nil);for j3=0,2 do if not(j3<=0)then if j3~=1 then do return Ko;end;else if not(Ko>t)then else do return Ko-J;end;end;end;else Ko=y();end;end;end;end;do so=0x4;end;else r=coroutine.yield;so=7;end;end;end;until so>7;end;local E9=o9();so=0;repeat if so<=0 then S9[0X2]=R9;so=0X1;else do if so==0x1 then R9=nil;do so=0X2;end;else return q9(L,nil,E9)(...);end;end;end;until(false);end)(0,string.match,0x5,0Xd,2,0X1,rawget,0x00100000000,string,0X0000e5,bit,0x0003,next,0X9,type,table.insert,0x000A,error,false,0X4,0X08,string.gsub,string.sub,0X0006,unpack,getfenv,15,256,7,string.rep,string.char,true,rawset,select,"\108\115\104if\116",nil,table,0X000014,tonumber,14,0Xb,"",'\098o\114',{0X000041,0XF6bF6DD9,3472601346,0xc72c987,3073229278,2527689305,1366571898,0x9e328b96,0x005A6097D},...);